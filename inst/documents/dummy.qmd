---
params:
  script: 'dev'
  with_library_paths: library_paths
  renv: TRUE
  tmpdir: "."
---

```{r}
#| label: Setup
#| include: false
knitr::opts_chunk$set(
  error = TRUE,
  warning = TRUE,
  message = TRUE,
  echo = TRUE
)

.libPaths(c(character(), params$with_library_paths))

file.path(params$tmpdir, "parent_options.rds") |> 
  readRDS() |> 
  options()
```

```{r}
#| label: Log R
#| eval: !expr base::grepl("\\.R$", params$script)
#| echo: false
knitr::spin_child(params$script)
```

```{r}
#| label: Log Quarto
#| child: !expr params$script
#| eval: !expr base::grepl("\\.qmd$", params$script)
#| include: !expr base::grepl("\\.qmd$", params$script)
```

```{r}
#| label: Log Rmarkdown
#| child: !expr params$script
#| eval: !expr base::grepl("\\.Rmd$", params$script)
#| include: !expr base::grepl("\\.Rmd$", params$script)
```

```{r, eval = FALSE}
library(reticulate)
# Force consistent Python session
use_python(Sys.which("python3"))
```

```{python}
#| label: Setup Python tracking
#| label: Log Python

from inst.documents.python_module2 import get_package_status
pkg1_status = get_package_status('old_status.json')

#| file: !expr params$script
#| eval: !expr base::grepl("\\.py$", params$script)
#| include: !expr base::grepl("\\.py$", params$script)

pkg2_status = get_package_status('new_status.json')
```


```{r}
#| label: Python modules
#| eval: !expr base::grepl("\\.py$", params$script)
#| echo: false

library(jsonlite)
pip_data <- read.table(text = paste(system('python3 -m pip list -v', intern = TRUE)[-(1:2)], collapse = "\n"),
                      col.names = c("Package", "Version", "Location", "Installer"), stringsAsFactors = FALSE)
tmp_old <- fromJSON("old_status.json"); unlink("old_status.json")
tmp_new <- fromJSON("new_status.json"); unlink("new_status.json")
pip_data$is_namespace <- pip_data$Package %in% setdiff(tmp_new$namespaced, tmp_old$namespaced)
pip_data$is_installed <- pip_data$Package %in% setdiff(tmp_new$loaded, tmp_old$loaded)

```

```{r}
#| label: renv status
#| include: false
if (is.character(params$renv) && params$renv == "yes" ||
      is.logical(params$renv) && params$renv) {
  saveRDS(
    object = whirl:::renv_status(),
    file = file.path(params$tmpdir, "renv_status.rds")
  )
}
```

```{r}
#| label: Log options and environment
#| include: false
saveRDS(
  object = options(),
  file = file.path(params$tmpdir, "options.rds")
)

saveRDS(
  object = Sys.getenv(),
  file = file.path(params$tmpdir, "environment.rds")
)
```

```{r}
#| label: Session info
#| include: false
info <- list( # Due to https://github.com/r-lib/sessioninfo/issues/96
    platform = sessioninfo::session_info(info = "platform")[["platform"]],
    packages = sessioninfo::session_info(info = "packages")[["packages"]],
    python = sessioninfo::session_info(info = "python")[["python"]]
  )

if (!"quarto" %in% names(info$platform)) { # Due to older versions of sessioninfo
  info$platform$quarto <- paste(quarto::quarto_version(), "@", quarto::quarto_path())
}

saveRDS(
  object = info,
  file = file.path(params$tmpdir, "session_info.rds")
)
```
