---
params:
  script: 'dev'
  with_library_paths: library_paths
  renv: TRUE
  tmpdir: "."
  converted_qmd: "temp_script.qmd"
---

```{r}
#| label: Setup
#| include: false
knitr::opts_chunk$set(
  error = TRUE,
  warning = TRUE,
  message = TRUE,
  echo = TRUE
)

.libPaths(c(character(), params$with_library_paths))

file.path(params$tmpdir, "parent_options.rds") |>
  readRDS() |>
  options()
```

```{r}
#| label: Convert R script to qmd
#| eval: !expr base::grepl("\\.R$", params$script)
#| echo: false
# Conversion is done to avoid problems caused by the warnings thrown
# by knitr::knit(), see e.g. issue #151
knitr::spin(
  text = readLines(params$script),
  knit = FALSE,
  format = "qmd"
) |>
  writeLines(
    con = file.path(params$tmpdir, params$converted_qmd)
  )
```

```{r}
#| label: Log R
#| child: !expr file.path(params$tmpdir, params$converted_qmd)
#| eval: !expr file.exists(file.path(params$tmpdir, params$converted_qmd))
#| include: !expr file.exists(file.path(params$tmpdir, params$converted_qmd))
```

```{r}
#| label: Log Quarto
#| child: !expr params$script
#| eval: !expr base::grepl("\\.qmd$", params$script)
#| include: !expr base::grepl("\\.qmd$", params$script)
```

```{r}
#| label: Log Rmarkdown
#| child: !expr params$script
#| eval: !expr base::grepl("\\.Rmd$", params$script)
#| include: !expr base::grepl("\\.Rmd$", params$script)
```

```{python}
#| label: Log Python
#| file: !expr params$script
#| eval: !expr base::grepl("\\.py$", params$script)
#| include: !expr base::grepl("\\.py$", params$script)
```

```{python}
#| label: Python modules
#| file: !expr file.path(params$tmpdir, "python_modules.py")
#| eval: !expr base::grepl("\\.py$", params$script)
#| echo: false
```

```{r}
#| label: renv status
#| include: false
if (is.character(params$renv) && params$renv == "yes" ||
      is.logical(params$renv) && params$renv) {
  saveRDS(
    object = whirl:::renv_status(),
    file = file.path(params$tmpdir, "renv_status.rds")
  )
}
```

```{r}
#| label: Log options and environment
#| include: false
saveRDS(
  object = options(),
  file = file.path(params$tmpdir, "options.rds")
)

saveRDS(
  object = Sys.getenv(),
  file = file.path(params$tmpdir, "environment.rds")
)
```

```{r}
#| label: Session info
#| include: false
info <- list( # Due to https://github.com/r-lib/sessioninfo/issues/96
  platform = sessioninfo::session_info(info = "platform")[["platform"]],
  packages = sessioninfo::session_info(info = "packages")[["packages"]],
  python = sessioninfo::session_info(info = "python")[["python"]]
  )

if (!"quarto" %in% names(info$platform)) { # Due to older versions of sessioninfo
  info$platform$quarto <- paste(quarto::quarto_version(), "@", quarto::quarto_path())
}

saveRDS(
  object = info,
  file = file.path(params$tmpdir, "session_info.rds")
)
```
