---
title: "`r params$title`"
date: "`r Sys.time()`"
date-format: "YYYY-MM-DDTHH:mm:ss zzz"
params:
  title: 'dev'
  script_md: 'dev'
  p_wd: ""
  strace: FALSE
  strace_path: ''
  strace_discards: NULL
  strace_keep: NULL
  objects_path: ''
  check_approved_folder_pkgs: NULL
  check_approved_url_pkgs: NULL
  renv: TRUE
  with_library_paths: library_paths
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
    toc-expand: true
    smooth-scroll: true
---

# Summary

```{r, echo=FALSE, eval=TRUE}
.libPaths(c(character(), params$with_library_paths))

status <- params$script_md |>
  whirl:::get_status()

status_txt <- status[c("error", "warning")]
status_txt <- status_txt[lapply(status_txt, length) > 0] |>
  lapply(\(x) paste("*", x, collapse = "\n")) |>
  unlist()

whirl:::quarto_callout(
  text = status_txt,
  title = status$status,
  type = switch(status$status,
    "error" = "important",
    "warning" = "warning",
    "success" = "tip"
  ),
  collapse = status$status != "success"
)
```

```{r, echo=FALSE}
if (is.character(params$renv) && params$renv == "yes" | is.logical(params$renv) && params$renv) {
  whirl:::renv_status()
}
```

```{r, echo=FALSE}
log_info <- whirl:::read_from_log()
use_log_info <- nrow(log_info) > 0

use_strace <- (is.character(params$strace) && params$strace == "yes" | is.logical(params$strace) && params$strace)

if (use_strace) {
  strace_info <- params$strace_path |> 
    read_strace(p_wd = params$p_wd) |> 
    refine_strace(
      strace_keep = params$strace_keep, 
      strace_discards = params$strace_discards
      )
  
  log_info <- dplyr::bind_rows(log_info, strace_info)
  
  use_log_info <- TRUE
}

if (use_log_info) {
    log_info <- log_info |> 
      dplyr::arrange(time) |> 
      whirl:::split_log()
}
```

```{r, echo=FALSE, results='asis', eval=use_log_info}
cat("## Input", "\n")
```

```{r, echo=FALSE, eval=use_log_info}
log_info$read
```

```{r, echo=FALSE, results='asis', eval=use_log_info}
cat("## Output", "\n")
```

```{r, echo=FALSE, eval=use_log_info}
log_info$write
```

```{r, echo=FALSE, results='asis', eval=use_log_info}
cat("## Removed", "\n")
```

```{r, echo=FALSE, eval=use_log_info}
log_info$delete
```

# Script

```{r, child = params$script_md}
```

# Session info

```{r, include=FALSE}
knitr::opts_chunk$set(
  error = FALSE,
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

info <- whirl:::session_info(params$check_approved_folder_pkgs, params$check_approved_url_pkgs)
```

```{r, results="asis"}
cat("\n## Platform \n")
info$platform
cat("\n")
```


```{r, results="asis", fig.height = 0.5}
cat("\n## Packages\n")

if (!is.null(params$check_approved_folder_pkgs) |
  !is.null(params$check_approved_url_pkgs)) {
  whirl:::create_approval_plot(info$packages |> data.frame())
}

cat("\n")
```

```{r, results="asis", fig.height = 0.5}
info$packages
```

```{r, results="asis"}
cat("\n## Environment variables \n")
info$environment
cat("\n")
```

```{r, results="asis"}
cat("\n## Option settings\n")
info$options
cat("\n")
```

```{r collect-objects}
whirl_objects <- vector("list")

if (exists("strace_info")) {
  whirl_objects$strace_info <- strace_info
}
if (exists("info")) {
  whirl_objects$environment_options <- info
}
saveRDS(whirl_objects, file = params$objects_path)
```
