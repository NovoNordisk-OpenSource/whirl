[{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2024 Novo Nordisk A/S, Danish company registration no. 24256790  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/articles/example_log.html","id":null,"dir":"Articles","previous_headings":"","what":"Script","title":null,"text":"Setup Prepare data Create save plot","code":"library(dplyr) Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union library(ggplot2) x <- mtcars |>   as_tibble(rownames = \"car\")  print(x) [38;5;246m# A tibble: 32 × 12[39m    car           mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb    [3m[38;5;246m<chr>[39m[23m       [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [38;5;250m 1[39m Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4 [38;5;250m 2[39m Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4 [38;5;250m 3[39m Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 [38;5;250m 4[39m Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 [38;5;250m 5[39m Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 [38;5;250m 6[39m Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 [38;5;250m 7[39m Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 [38;5;250m 8[39m Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2 [38;5;250m 9[39m Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 [38;5;250m10[39m Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 [38;5;246m# ℹ 22 more rows[39m ggplot(data = x) +   geom_point(mapping = aes(x = mpg, y = hp, size = wt, colour = as.factor(am))) ggsave(\"plot1.png\") [1m[22mSaving 7 x 5 in image"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/articles/whirl.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Execute Scripts","text":"whirl package provides functionalities executing scripts batch simultaneously getting logs individual executions. following sections, go use package.","code":""},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/articles/whirl.html","id":"single-and-multiple-files-and-wild-cards","dir":"Articles","previous_headings":"Ways to call the run() function","what":"Single and multiple files, and wild cards","title":"Execute Scripts","text":"input argument run() function can simple case point single file execution log-generation required. input argument can also point multiple files directory using wildcard (globbing) patterns. case, scripts directory executed parallel log generated script. number workers can specified n_workers argument (default set one). summary log file also provided fast way get overview execution. location summary file can controlled summary_file argument. information wildcards interpreted see Sys.glob(). also possible provide character vector several paths (either single files glob expression) executed. Note whenever input argument supplied character vector (e.g. c(\"path//script1.R\", \"path//script2.R\")) assumes can executed independently parallel. elements needs executed sequentially can achieved using list() instead (see ).","code":"library(whirl) run(input = \"path/to/script.R\") # Execution of all R files in a specific directory run(   input = \"path/to/directory/*.R\",   n_workers = 4,   summary_file = \"path/to/summary\" )  # Execution of all R files starting with \"mk200\" in a specific directory run(   input = \"path/to/directory/mk200*.R\",   n_workers = 8,   summary_file = \"path/to/summary\" )"},{"path":"https://novonordisk-opensource.github.io/whirl/articles/whirl.html","id":"using-list-as-input","dir":"Articles","previous_headings":"Ways to call the run() function","what":"Using list() as input","title":"Execute Scripts","text":"scripts executed specific order, input argument can supplied list. scripts executed order listed list, scripts listed element executed parallel (n_workers > 1). list can also supplied names list elements. can useful execution ‘name’ printed console. E.g.","code":"# In the below example, script1.R and script2.R will be executed in parallel run(   input = c(     \"path/to/script1.R\",     \"path/to/script2.R\"   ),   n_workers = 2 )  # In the below example, script1.R and script2.R will be executed in parallel, # and all R files in the directory will subsequently be executed in parallel run(   input = list(     c(\"path/to/script1.R\", \"path/to/script2.R\"),     \"path/to/directory/*.R\"   ),   n_workers = 2 )  # In the below example, script1.R and script2.R will be executed in parallel, # and subsequently script3.R and script4.R will be executed in parallel run(   input = list(     c(\"path/to/script1.R\", \"path/to/script2.R\"),     c(\"path/to/script3.R\", \"path/to/script4.R\")   ),   n_workers = 2 ) run(   input = list(     list(       name = \"Step 1\",       paths = c(\"path/to/script1.R\", \"path/to/script2.R\")     ),     list(       name = \"Step 2\",       paths = c(\"path/to/script3.R\", \"path/to/script4.R\")     )   ),   n_workers = 2 )"},{"path":"https://novonordisk-opensource.github.io/whirl/articles/whirl.html","id":"using-a-configuration-file-as-input","dir":"Articles","previous_headings":"Ways to call the run() function","what":"Using a configuration file as input","title":"Execute Scripts","text":"execution order can also pre-specified configuration file (config file short). config file following structure. case, input argument run() function point config file. Assuming config file called config.yaml, execution can initiated follows: steps config file executed independently scrips within step executed parallel using number workers specified n_workers argument.","code":"steps:   - name: \"Step 1\"         paths:           - \"path/to/script1.R\"       - \"path/to/script2.R\"   - name: \"Step 2\"       paths:           - \"path/to/script3.R\"       - \"path/to/script4.R\" run(input = \"path/to/config.yaml\", n_workers = 4)"},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/articles/whirl.html","id":"how-to-use-the-log_dir-argument-to-specify-where-to-store-the-logs","dir":"Articles","previous_headings":"Adjusting the log directory","what":"How to use the log_dir argument to specify where to store the logs","title":"Execute Scripts","text":"executing run() default store logs directory individual scripts located. example, apply run() vector scripts following paths c(path//dir1/script1.R, path//dir2/script2.R), log script1.R script2.R stored path//dir1 path//dir2, respectively. logs stored different directory, log_dir argument can used. argument can supplied character string function. Note either case directory log_dir points must exist execution initiated. log_dir supplied character pointing specific path call look like: example log script.R stored path//logs. Note multiple scripts executed log_dir character path, every log redirected directory - case path//logs. dynamic approach needed log_dir argument can also supplied function applied individual path every script. example, multiple script executed logs needs stored sub-folder within script directories achieved : example log script1.R stored path//dir1/logs log script2.R stored path//dir2/logs. Note x refer path script executed.","code":"run(input = \"path/to/script.R\", log_dir = \"path/to/logs\") run(   input = c(\"path/to/dir1/script1.R\", \"path/to/dir2/script2.R\"),   log_dir = function(x) {     paste0(dirname(x), \"/logs\")   } )"},{"path":"https://novonordisk-opensource.github.io/whirl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aksel Thomsen. Author, maintainer. Lovemore Gakava. Author. Cervan Girard. Author. Kristian Troejelsgaard. Author. Steffen Falgreen Larsen. Author. Vladimir Obucina. Author. Novo Nordisk /S. Copyright holder.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomsen , Gakava L, Girard C, Troejelsgaard K, Larsen S, Obucina V (2025). whirl: Logging package. R package version 0.1.10.9008, https://github.com/novonordisk-opensource/whirl, https://novonordisk-opensource.github.io/whirl/.","code":"@Manual{,   title = {whirl: Logging package},   author = {Aksel Thomsen and Lovemore Gakava and Cervan Girard and Kristian Troejelsgaard and Steffen Falgreen Larsen and Vladimir Obucina},   year = {2025},   note = {R package version 0.1.10.9008,     https://github.com/novonordisk-opensource/whirl},   url = {https://novonordisk-opensource.github.io/whirl/}, }"},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Logging package","text":"whirl package provide functionalities executing scripts batch simultaneously getting log individual executions. log script execution many pharmaceutical companies GxP requirement, whirl package honors requirement generating log , among things, contains information : Status (script run error warnings) actual code Date time execution environment script executed (session info) Information packages versions utilized Environmental variables wrapped nicely formatted html document easy navigate.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Logging package","text":"main function whirl package run() takes input argument defines scripts executed. simplest way provide path single script: also possible run several scripts simultaneously: specifying run() can use two simultaneous workers execute scripts, meaning executed parallel. using run() following files created: Creates log directory script names {script_name}_log.html. See example_log.html example simple log. Creates summary log overall status script. Default path summary.html. See summary.html example summary log . Apart function also returns tibble status script execution similar content summary :","code":"library(whirl)  run(\"success.R\") #> ✔ success.R: Completed succesfully result <- run(c(\"success.R\", \"warning.R\"), n_workers = 2) #> ✔ success.R: Completed succesfully #> ⚠ warning.R: Completed with warnings print(result) #> # A tibble: 2 × 6 #>      id tag   script                                 status result       log_dir #>   <dbl> <chr> <chr>                                  <chr>  <list>       <chr>   #> 1     1 <NA>  /private/var/folders/fx/71by3f551qzb5… succe… <named list> /priva… #> 2     2 <NA>  /private/var/folders/fx/71by3f551qzb5… warni… <named list> /priva…"},{"path":"https://novonordisk-opensource.github.io/whirl/index.html","id":"config-files","dir":"","previous_headings":"","what":"Config files","title":"Logging package","text":"run() also supports running scripts several sequential steps. setup useful projects several steps depends others output, thereby need executed specific order. best way implement project use configuration file whirl. configuration file yaml file specifies steps: _whirl.yaml: specifying first step run succes.R. step completed continue running scripts second steps.","code":"steps:   - name: \"First step\"     paths:       - \"success.R\"   - name: \"Second step\"     paths:       - \"warning.R\"       - \"error.R\"`` result <- run(\"_whirl.yaml\", n_workers = 2) #> ✔ success.R: Completed succesfully #> ⚠ warning.R: Completed with warnings #> ✖ error.R: Completed with errors print(result) #> # A tibble: 3 × 6 #>      id tag   script                                 status result       log_dir #>   <dbl> <chr> <chr>                                  <chr>  <list>       <chr>   #> 1     1 <NA>  /private/var/folders/fx/71by3f551qzb5… succe… <named list> /priva… #> 2     2 <NA>  /private/var/folders/fx/71by3f551qzb5… warni… <named list> /priva… #> 3     3 <NA>  /private/var/folders/fx/71by3f551qzb5… error  <named list> /priva…"},{"path":"https://novonordisk-opensource.github.io/whirl/index.html","id":"customize-run","dir":"","previous_headings":"","what":"Customize run()","title":"Logging package","text":"information customize execution logging needs see following: run(): information call . vignette(\"whirl\"): depth explanation, advanced usage. vignette(\"articles/example\"): simple example, including created log. whirl-options: change default behavior whirl.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/custom_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to log custom messages — custom_logging","title":"Helper function to log custom messages — custom_logging","text":"Useful e.g. read write operations databases etc. automatically captured.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/custom_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to log custom messages — custom_logging","text":"","code":"log_read(file, log = Sys.getenv(\"WHIRL_LOG_MSG\"))  log_write(file, log = Sys.getenv(\"WHIRL_LOG_MSG\"))  log_delete(file, log = Sys.getenv(\"WHIRL_LOG_MSG\"))"},{"path":"https://novonordisk-opensource.github.io/whirl/reference/custom_logging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to log custom messages — custom_logging","text":"file character() description file read, written deleted. log character() path log file.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/custom_logging.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper function to log custom messages — custom_logging","text":"default environment variable WHIRL_LOG_MSG set session used log scripts, input automatically captured resulting log. run outside whirl, meaning environment variable unset, operations streamed stdout(). default console.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/error_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary","title":null,"text":"Error: error!","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/error_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Script","title":null,"text":"","code":"# This script produces error for testing purposes  stop(\"This is an error!\") Error: This is an error!"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/reference/run.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute single or multiple R, R Markdown, and Quarto scripts — run","title":"Execute single or multiple R, R Markdown, and Quarto scripts — run","text":"Executes logs execution scripts. Logs script stored folder script. way execution logged configurable several options e.g. verbosity logs. See whirl-options configure .","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute single or multiple R, R Markdown, and Quarto scripts — run","text":"","code":"run(   input = \"_whirl.yml\",   steps = NULL,   summary_file = \"summary.html\",   n_workers = zephyr::get_option(\"n_workers\", \"whirl\"),   check_renv = zephyr::get_option(\"check_renv\", \"whirl\"),   verbosity_level = zephyr::get_verbosity_level(\"whirl\"),   track_files = zephyr::get_option(\"track_files\", \"whirl\"),   out_formats = zephyr::get_option(\"out_formats\", \"whirl\"),   log_dir = zephyr::get_option(\"log_dir\", \"whirl\") )"},{"path":"https://novonordisk-opensource.github.io/whirl/reference/run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute single or multiple R, R Markdown, and Quarto scripts — run","text":"input character vector file path(s) R, R Markdown, Quarto scripts, files folder using regular expression, whirl config file. input can also structured list element executed sequentially, scripts within element can executed parallel. steps optional argument can used certain steps within config files (list) executed. equivalent names steps found config file. kept NULL (default) steps listed config file executed. summary_file character string specifying file path summary log stored. n_workers Number simultaneous workers used run function. maximum 128 workers allowed.. Default: 1. check_renv projects renv status checked?. Default: FALSE. verbosity_level Verbosity level functions whirl. See zephyr::verbosity_level details.. Default: NA_character_. track_files files read written tracked? Currently supported Linux.. Default: FALSE. out_formats log format(s) produce. Possibilities html, json, markdown formats: gfm, commonmark, markua.. Default: \"html\". log_dir output directory log files. Default folder executed script. log_dir can path character can function takes script path input returns log directory. information see examples run() vignette('whirl').. Default: function (x)  dirname(x).","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute single or multiple R, R Markdown, and Quarto scripts — run","text":"tibble containing execution results scripts.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute single or multiple R, R Markdown, and Quarto scripts — run","text":"","code":"# Start by copying the following three example scripts: file.copy(   from = system.file(\"examples\", c(\"success.R\", \"warning.R\", \"error.R\"),     package = \"whirl\"   ),   to = \".\" ) #> [1] TRUE TRUE TRUE  # Run a single script run(\"success.R\") #> ══ Executing scripts and generating logs ═══════════════════════════════════════ #> → Executing scripts in parallel using 1 cores #> The following steps will be executed #> • Step 1 #>  #> ── Step 1 ────────────────────────────────────────────────────────────────────── #> ✔ success.R: Completed succesfully #>  #> ══ End of process ══════════════════════════════════════════════════════════════  # Run several scripts in parallel on up to 2 workers run(c(\"success.R\", \"warning.R\", \"error.R\"), n_workers = 2) #> ══ Executing scripts and generating logs ═══════════════════════════════════════ #> → Executing scripts in parallel using 2 cores #> The following steps will be executed #> • Step 1 #>  #> ── Step 1 ────────────────────────────────────────────────────────────────────── #> ✔ success.R: Completed succesfully #> ⚠ warning.R: Completed with warnings #> ✖ error.R: Completed with errors #>  #> ══ End of process ══════════════════════════════════════════════════════════════  # Run scripts in two steps by providing them as list elements run(   list(     c(\"success.R\", \"warning.R\"),     \"error.R\"   ),   n_workers = 2 ) #> ══ Executing scripts and generating logs ═══════════════════════════════════════ #> → Executing scripts in parallel using 2 cores #> The following steps will be executed #> • Step 1 #> • Step 2 #>  #> ── Step 1 ────────────────────────────────────────────────────────────────────── #> ✔ success.R: Completed succesfully #> ⚠ warning.R: Completed with warnings #>  #>  #> ── Step 2 ────────────────────────────────────────────────────────────────────── #> ✖ error.R: Completed with errors #>  #> ══ End of process ══════════════════════════════════════════════════════════════ if (FALSE) {  # Re-directing the logs to a sub-folder by utilizing the log_dir argument in # run(). This will require that the sub-folder exist and the code is # therefore not executed  # Specifying the path using a manually defined character run(\"success.R\", log_dir = getwd())  # Specifying the path with a generic function that can handle the scripts # individually. run(\"success.R\", log_dir = function(x) {   paste0(dirname(x), \"/logs\") }) }"},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/reference/success_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Script","title":null,"text":"","code":"# This script produces no errors or warnings for testing purposes  message(\"this script has no errors or warnings\") this script has no errors or warnings"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/reference/use_whirl.html","id":null,"dir":"Reference","previous_headings":"","what":"Use whirl — use_whirl","title":"Use whirl — use_whirl","text":"Utility function setup execution whirl project: Creates configuration file (default _whirl.yaml) Updates .gitignore include log files See vignette(\"whirl\") specify paths inside configuration file.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/use_whirl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use whirl — use_whirl","text":"","code":"use_whirl(config_file = \"_whirl.yaml\")"},{"path":"https://novonordisk-opensource.github.io/whirl/reference/use_whirl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use whirl — use_whirl","text":"config_file Path whirl config file, relative project","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/warning_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary","title":null,"text":"Warning: warning Warning: warning 2 ^^ Warning: warning 3 ^^ Warning: warning 4 ^^ Warning: warning 5 ^^ Warning: warning 6 ^^ Warning: warning 7 ^^","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/warning_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Script","title":null,"text":"","code":"# This script produces a warning for testing purposes  warning(\"this is a warning\") Warning: this is a warning warning(\"this is a warning 2 ^^\") Warning: this is a warning 2 ^^ warning(\"this is a warning 3 ^^\") Warning: this is a warning 3 ^^ warning(\"this is a warning 4 ^^\") Warning: this is a warning 4 ^^ warning(\"this is a warning 5 ^^\") Warning: this is a warning 5 ^^ warning(\"this is a warning 6 ^^\") Warning: this is a warning 6 ^^ warning(\"this is a warning 7 ^^\") Warning: this is a warning 7 ^^"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal parameters for reuse in functions — whirl-options-params","title":"Internal parameters for reuse in functions — whirl-options-params","text":"Internal parameters reuse functions","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal parameters for reuse in functions — whirl-options-params","text":"verbosity_level Verbosity level functions whirl. See zephyr::verbosity_level details.. Default: NA_character_. out_formats log format(s) produce. Possibilities html, json, markdown formats: gfm, commonmark, markua.. Default: \"html\". track_files files read written tracked? Currently supported Linux.. Default: FALSE. check_renv projects renv status checked?. Default: FALSE. track_files_discards List file naming patterns tracked track_files = TRUE. Default: c(\"^/lib\", \"^/etc\", \"^/lib64\", \"^/usr\", \"^/var\", \"^/opt\", \"^/sys\", \"^/proc\", \"^/tmp\", \"^/null\", \"^/urandom\", \"^/.cache\"). track_files_keep List file naming patterns always tracked track_files = TRUE. Default: NULL. approved_pkgs_folder Approved folder library packages. Default: NULL. approved_pkgs_url Approved URL library packages. Default: NULL. n_workers Number simultaneous workers used run function. maximum 128 workers allowed.. Default: 1. log_dir output directory log files. Default folder executed script. log_dir can path character can function takes script path input returns log directory. information see examples run() vignette('whirl').. Default: function (x)  dirname(x). execute_dir working directory process executing script. Default us execute R files working directory calling run() functions directory script. change provide character path (used scripts) function takes script input returns execution directory.. Default: NULL. wait_timeout Timeout waiting R process callr::r_session start, milliseconds.. Default: 9000.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options-params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal parameters for reuse in functions — whirl-options-params","text":"See whirl-options information.","code":""},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"verbosity-level","dir":"Reference","previous_headings":"","what":"verbosity_level","title":"Options for whirl — whirl-options","text":"Verbosity level functions whirl. See zephyr::verbosity_level details. Default: NA_character_ Option: whirl.verbosity_level Environment: R_WHIRL_VERBOSITY_LEVEL","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"out-formats","dir":"Reference","previous_headings":"","what":"out_formats","title":"Options for whirl — whirl-options","text":"log format(s) produce. Possibilities html, json, markdown formats: gfm, commonmark, markua. Default: \"html\" Option: whirl.out_formats Environment: R_WHIRL_OUT_FORMATS","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"track-files","dir":"Reference","previous_headings":"","what":"track_files","title":"Options for whirl — whirl-options","text":"files read written tracked? Currently supported Linux. Default: FALSE Option: whirl.track_files Environment: R_WHIRL_TRACK_FILES","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"check-renv","dir":"Reference","previous_headings":"","what":"check_renv","title":"Options for whirl — whirl-options","text":"projects renv status checked? Default: FALSE Option: whirl.check_renv Environment: R_WHIRL_CHECK_RENV","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"track-files-discards","dir":"Reference","previous_headings":"","what":"track_files_discards","title":"Options for whirl — whirl-options","text":"List file naming patterns tracked track_files = TRUE Default: c(\"^/lib\", \"^/etc\", \"^/lib64\", \"^/usr\", \"^/var\", \"^/opt\", \"^/sys\", \"^/proc\", \"^/tmp\", \"^/null\", \"^/urandom\", \"^/.cache\") Option: whirl.track_files_discards Environment: R_WHIRL_TRACK_FILES_DISCARDS","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"track-files-keep","dir":"Reference","previous_headings":"","what":"track_files_keep","title":"Options for whirl — whirl-options","text":"List file naming patterns always tracked track_files = TRUE Default: NULL Option: whirl.track_files_keep Environment: R_WHIRL_TRACK_FILES_KEEP","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"approved-pkgs-folder","dir":"Reference","previous_headings":"","what":"approved_pkgs_folder","title":"Options for whirl — whirl-options","text":"Approved folder library packages Default: NULL Option: whirl.approved_pkgs_folder Environment: R_WHIRL_APPROVED_PKGS_FOLDER","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"approved-pkgs-url","dir":"Reference","previous_headings":"","what":"approved_pkgs_url","title":"Options for whirl — whirl-options","text":"Approved URL library packages Default: NULL Option: whirl.approved_pkgs_url Environment: R_WHIRL_APPROVED_PKGS_URL","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"n-workers","dir":"Reference","previous_headings":"","what":"n_workers","title":"Options for whirl — whirl-options","text":"Number simultaneous workers used run function. maximum 128 workers allowed. Default: 1 Option: whirl.n_workers Environment: R_WHIRL_N_WORKERS","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"log-dir","dir":"Reference","previous_headings":"","what":"log_dir","title":"Options for whirl — whirl-options","text":"output directory log files. Default folder executed script. log_dir can path character can function takes script path input returns log directory. information see examples run() vignette('whirl'). Default: function (x)  dirname(x) Option: whirl.log_dir Environment: R_WHIRL_LOG_DIR","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"execute-dir","dir":"Reference","previous_headings":"","what":"execute_dir","title":"Options for whirl — whirl-options","text":"working directory process executing script. Default us execute R files working directory calling run() functions directory script. change provide character path (used scripts) function takes script input returns execution directory. Default: NULL Option: whirl.execute_dir Environment: R_WHIRL_EXECUTE_DIR","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-options.html","id":"wait-timeout","dir":"Reference","previous_headings":"","what":"wait_timeout","title":"Options for whirl — whirl-options","text":"Timeout waiting R process callr::r_session start, milliseconds. Default: 9000 Option: whirl.wait_timeout Environment: R_WHIRL_WAIT_TIMEOUT","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-package.html","id":null,"dir":"Reference","previous_headings":"","what":"whirl: Logging package — whirl-package","title":"whirl: Logging package — whirl-package","text":"Provides functionalities running R scripts batch, simultaneously creating logs script execution.","code":""},{"path":[]},{"path":"https://novonordisk-opensource.github.io/whirl/reference/whirl-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"whirl: Logging package — whirl-package","text":"Maintainer: Aksel Thomsen oath@novonordisk.com Authors: Lovemore Gakava lvgk@novonordisk.com Cervan Girard cgid@novonordisk.com Kristian Troejelsgaard ktqn@novonordisk.com Steffen Falgreen Larsen sffl@novonordisk.com Vladimir Obucina vlob@novonordisk.com contributors: Novo Nordisk /S [copyright holder]","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-017-2024-12-17","dir":"Changelog","previous_headings":"","what":"whirl 0.1.7 (2024-12-17)","title":"whirl 0.1.7 (2024-12-17)","text":"Enable redirection logs log_dir argument run(). Changed title individual logs script name moved path distinct section within title-block. Fixed bug hyperlink summary files rendered correctly. Fixed bug installed python packages listed log. Enable use R expressions yaml configuration file. Enables user define working directory script execute_dir option.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-016-2024-11-25","dir":"Changelog","previous_headings":"","what":"whirl 0.1.6 (2024-11-25)","title":"whirl 0.1.6 (2024-11-25)","text":"Added support logging Python scripts run(). Improved unit tests run() Fixing bug queue returned correctly instances. Switched using Sys.glob() instead utils::glob2rx().","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-015-2024-11-21","dir":"Changelog","previous_headings":"","what":"whirl 0.1.5 (2024-11-21)","title":"whirl 0.1.5 (2024-11-21)","text":"Reducing number dependencies.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-014-2024-11-01","dir":"Changelog","previous_headings":"","what":"whirl 0.1.4 (2024-11-01)","title":"whirl 0.1.4 (2024-11-01)","text":"Add use_whirl() utility function.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-013-2024-10-23","dir":"Changelog","previous_headings":"","what":"whirl 0.1.3 (2024-10-23)","title":"whirl 0.1.3 (2024-10-23)","text":"control verbosity level specify whether renv checked specify files track adjust output format log files.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-012-2024-10-21","dir":"Changelog","previous_headings":"","what":"whirl 0.1.2 (2024-10-21)","title":"whirl 0.1.2 (2024-10-21)","text":"Updated package website url example code","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-011-2024-10-07","dir":"Changelog","previous_headings":"","what":"whirl 0.1.1 (2024-10-07)","title":"whirl 0.1.1 (2024-10-07)","text":"Fix enabling rendering md log formats(“gfm”, “commonmark”, “markua”).","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-010-2024-10-01","dir":"Changelog","previous_headings":"","what":"whirl 0.1.0 (2024-10-01)","title":"whirl 0.1.0 (2024-10-01)","text":"First public release.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-005-2024-09-27","dir":"Changelog","previous_headings":"","what":"whirl 0.0.5 (2024-09-27)","title":"whirl 0.0.5 (2024-09-27)","text":"Updated documentation README vignettes now ready users.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-004-2024-09-24","dir":"Changelog","previous_headings":"","what":"whirl 0.0.4 (2024-09-24)","title":"whirl 0.0.4 (2024-09-24)","text":"Adjusting run() unify execution scripts, lists scripts, configuration files. Using multiple independent callr::r_session executing several scripts. Cleanup namespace exported functions.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-003-2024-08-26","dir":"Changelog","previous_headings":"","what":"whirl 0.0.3 (2024-08-26)","title":"whirl 0.0.3 (2024-08-26)","text":"Initial commit run(). Substituting spinner progress bar executing single scripts.","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-002","dir":"Changelog","previous_headings":"","what":"whirl 0.0.2","title":"whirl 0.0.2","text":"Update execution (including order execution) can controlled config file","code":""},{"path":"https://novonordisk-opensource.github.io/whirl/news/index.html","id":"whirl-001","dir":"Changelog","previous_headings":"","what":"whirl 0.0.1","title":"whirl 0.0.1","text":"First release internal package repository.","code":""}]
