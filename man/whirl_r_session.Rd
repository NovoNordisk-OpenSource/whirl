% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/whirl_r_session.R
\name{whirl_r_session}
\alias{whirl_r_session}
\title{Whirl R session}
\description{
Extension of \link[callr:r_session]{callr::r_session} with additional methods for easier creating logs.
}
\keyword{internal}
\section{Super classes}{
\code{\link[processx:process]{processx::process}} -> \code{\link[callr:r_session]{callr::r_session}} -> \code{whirl_r_session}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-whirl_r_session-new}{\code{whirl_r_session$new()}}
\item \href{#method-whirl_r_session-finalize}{\code{whirl_r_session$finalize()}}
\item \href{#method-whirl_r_session-print}{\code{whirl_r_session$print()}}
\item \href{#method-whirl_r_session-poll}{\code{whirl_r_session$poll()}}
\item \href{#method-whirl_r_session-wait}{\code{whirl_r_session$wait()}}
\item \href{#method-whirl_r_session-check_status}{\code{whirl_r_session$check_status()}}
\item \href{#method-whirl_r_session-spin}{\code{whirl_r_session$spin()}}
\item \href{#method-whirl_r_session-log_script}{\code{whirl_r_session$log_script()}}
\item \href{#method-whirl_r_session-create_log}{\code{whirl_r_session$create_log()}}
\item \href{#method-whirl_r_session-log_finish}{\code{whirl_r_session$log_finish()}}
\item \href{#method-whirl_r_session-create_outputs}{\code{whirl_r_session$create_outputs()}}
\item \href{#method-whirl_r_session-clone}{\code{whirl_r_session$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="as_ps_handle"><a href='../../processx/html/process.html#method-process-as_ps_handle'><code>processx::process$as_ps_handle()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="format"><a href='../../processx/html/process.html#method-process-format'><code>processx::process$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_cmdline"><a href='../../processx/html/process.html#method-process-get_cmdline'><code>processx::process$get_cmdline()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_cpu_times"><a href='../../processx/html/process.html#method-process-get_cpu_times'><code>processx::process$get_cpu_times()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_error_connection"><a href='../../processx/html/process.html#method-process-get_error_connection'><code>processx::process$get_error_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_error_file"><a href='../../processx/html/process.html#method-process-get_error_file'><code>processx::process$get_error_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_exe"><a href='../../processx/html/process.html#method-process-get_exe'><code>processx::process$get_exe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_exit_status"><a href='../../processx/html/process.html#method-process-get_exit_status'><code>processx::process$get_exit_status()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_input_connection"><a href='../../processx/html/process.html#method-process-get_input_connection'><code>processx::process$get_input_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_input_file"><a href='../../processx/html/process.html#method-process-get_input_file'><code>processx::process$get_input_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_memory_info"><a href='../../processx/html/process.html#method-process-get_memory_info'><code>processx::process$get_memory_info()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_name"><a href='../../processx/html/process.html#method-process-get_name'><code>processx::process$get_name()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_output_connection"><a href='../../processx/html/process.html#method-process-get_output_connection'><code>processx::process$get_output_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_output_file"><a href='../../processx/html/process.html#method-process-get_output_file'><code>processx::process$get_output_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_pid"><a href='../../processx/html/process.html#method-process-get_pid'><code>processx::process$get_pid()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_poll_connection"><a href='../../processx/html/process.html#method-process-get_poll_connection'><code>processx::process$get_poll_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_result"><a href='../../processx/html/process.html#method-process-get_result'><code>processx::process$get_result()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_start_time"><a href='../../processx/html/process.html#method-process-get_start_time'><code>processx::process$get_start_time()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_status"><a href='../../processx/html/process.html#method-process-get_status'><code>processx::process$get_status()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_username"><a href='../../processx/html/process.html#method-process-get_username'><code>processx::process$get_username()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_wd"><a href='../../processx/html/process.html#method-process-get_wd'><code>processx::process$get_wd()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_error_connection"><a href='../../processx/html/process.html#method-process-has_error_connection'><code>processx::process$has_error_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_input_connection"><a href='../../processx/html/process.html#method-process-has_input_connection'><code>processx::process$has_input_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_output_connection"><a href='../../processx/html/process.html#method-process-has_output_connection'><code>processx::process$has_output_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_poll_connection"><a href='../../processx/html/process.html#method-process-has_poll_connection'><code>processx::process$has_poll_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="interrupt"><a href='../../processx/html/process.html#method-process-interrupt'><code>processx::process$interrupt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_alive"><a href='../../processx/html/process.html#method-process-is_alive'><code>processx::process$is_alive()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_incomplete_error"><a href='../../processx/html/process.html#method-process-is_incomplete_error'><code>processx::process$is_incomplete_error()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_incomplete_output"><a href='../../processx/html/process.html#method-process-is_incomplete_output'><code>processx::process$is_incomplete_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_supervised"><a href='../../processx/html/process.html#method-process-is_supervised'><code>processx::process$is_supervised()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="kill"><a href='../../processx/html/process.html#method-process-kill'><code>processx::process$kill()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="kill_tree"><a href='../../processx/html/process.html#method-process-kill_tree'><code>processx::process$kill_tree()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="poll_io"><a href='../../processx/html/process.html#method-process-poll_io'><code>processx::process$poll_io()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_error"><a href='../../processx/html/process.html#method-process-read_all_error'><code>processx::process$read_all_error()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_error_lines"><a href='../../processx/html/process.html#method-process-read_all_error_lines'><code>processx::process$read_all_error_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_output"><a href='../../processx/html/process.html#method-process-read_all_output'><code>processx::process$read_all_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_output_lines"><a href='../../processx/html/process.html#method-process-read_all_output_lines'><code>processx::process$read_all_output_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_error"><a href='../../processx/html/process.html#method-process-read_error'><code>processx::process$read_error()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_error_lines"><a href='../../processx/html/process.html#method-process-read_error_lines'><code>processx::process$read_error_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_output"><a href='../../processx/html/process.html#method-process-read_output'><code>processx::process$read_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_output_lines"><a href='../../processx/html/process.html#method-process-read_output_lines'><code>processx::process$read_output_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="resume"><a href='../../processx/html/process.html#method-process-resume'><code>processx::process$resume()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="signal"><a href='../../processx/html/process.html#method-process-signal'><code>processx::process$signal()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="supervise"><a href='../../processx/html/process.html#method-process-supervise'><code>processx::process$supervise()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="suspend"><a href='../../processx/html/process.html#method-process-suspend'><code>processx::process$suspend()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="write_input"><a href='../../processx/html/process.html#method-process-write_input'><code>processx::process$write_input()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="attach"><a href='../../callr/html/r_session.html#method-r_session-attach'><code>callr::r_session$attach()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="call"><a href='../../callr/html/r_session.html#method-r_session-call'><code>callr::r_session$call()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="close"><a href='../../callr/html/r_session.html#method-r_session-close'><code>callr::r_session$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="debug"><a href='../../callr/html/r_session.html#method-r_session-debug'><code>callr::r_session$debug()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="get_running_time"><a href='../../callr/html/r_session.html#method-r_session-get_running_time'><code>callr::r_session$get_running_time()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="get_state"><a href='../../callr/html/r_session.html#method-r_session-get_state'><code>callr::r_session$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="poll_process"><a href='../../callr/html/r_session.html#method-r_session-poll_process'><code>callr::r_session$poll_process()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="read"><a href='../../callr/html/r_session.html#method-r_session-read'><code>callr::r_session$read()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="run"><a href='../../callr/html/r_session.html#method-r_session-run'><code>callr::r_session$run()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="run_with_output"><a href='../../callr/html/r_session.html#method-r_session-run_with_output'><code>callr::r_session$run_with_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="traceback"><a href='../../callr/html/r_session.html#method-r_session-traceback'><code>callr::r_session$traceback()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-new"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-new}{}}}
\subsection{Method \code{new()}}{
Initialize the new whirl R session
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$new(
  verbose = TRUE,
  check_renv = FALSE,
  track_files = FALSE,
  track_files_discards = c(),
  track_files_keep = c(),
  approved_pkgs_folder = c(),
  approved_pkgs_url = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{\link{logical} Should the progress be printed to the console?}

\item{\code{check_renv}}{\link{logical} Should renv be checked?}

\item{\code{track_files}}{\link{logical} Should the files be tracked?}

\item{\code{track_files_discards}}{\link{character} Files to discard from tracking}

\item{\code{track_files_keep}}{\link{character} Files to keep from tracking}

\item{\code{approved_pkgs_folder}}{\link{character} Folder with approved packages}

\item{\code{approved_pkgs_url}}{\link{character} URL with approved packages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \link{whirl_r_session} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-finalize}{}}}
\subsection{Method \code{finalize()}}{
Finalize the whirl R session
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$finalize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-print"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-print}{}}}
\subsection{Method \code{print()}}{
Print the whirl R session
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-poll"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-poll}{}}}
\subsection{Method \code{poll()}}{
Poll the process
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$poll(timeout)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeout}}{The timeout in milliseconds}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-wait"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-wait}{}}}
\subsection{Method \code{wait()}}{
Wait for the process to complete
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$wait(timeout = -1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeout}}{The timeout in milliseconds}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-check_status"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-check_status}{}}}
\subsection{Method \code{check_status()}}{
Check the status of the callr process
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$check_status()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\link{invisible} status
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-spin"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-spin}{}}}
\subsection{Method \code{spin()}}{
Spin the spinner
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$spin(template = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{template}}{The template to display}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-log_script"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-log_script}{}}}
\subsection{Method \code{log_script()}}{
Log the script
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$log_script(script)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{script}}{The script to log}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-create_log"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-create_log}{}}}
\subsection{Method \code{create_log()}}{
Create the html log
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$create_log()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-log_finish"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-log_finish}{}}}
\subsection{Method \code{log_finish()}}{
Finish the log
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$log_finish()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\link{invisible} self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-create_outputs"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-create_outputs}{}}}
\subsection{Method \code{create_outputs()}}{
Create all log outputs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$create_outputs(out_dir, format)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{out_dir}}{\link{character} Output directory for the log}

\item{\code{format}}{\link{character} Output formats to create}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible},\link{list} of logging information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whirl_r_session-clone"></a>}}
\if{latex}{\out{\hypertarget{method-whirl_r_session-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{whirl_r_session$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
